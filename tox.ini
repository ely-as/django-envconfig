[tox]
min_version = 4.0
isolated_build = True
envlist =
    static-test
labels =
    # Used by .github/workflows/test.yml - envs to run for each py version
    3.6 = test-py36-django{111,20,21,22,30,31,32}
    3.8 = test-py38-django{22,30,31,32,40,41,42}
    3.9 = test-py39-django{22,30,31,32,40,41,42}
    3.10 = test-py310-django{32,40,41,42}
    3.11 = static, test-py311-django{41,42}

[testenv]
deps =
    django111: Django>=1.11,<1.12
    django20: Django>=2.0,<2.1
    django21: Django>=2.1,<2.2
    django22: Django>=2.2,<2.3
    django30: Django>=3.0,<3.1
    django31: Django>=3.1,<3.2
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    django42: Django>=4.2,<4.3
    # minimum micro versions for Python 3.7 to 3.11, see:
    # - https://docs.djangoproject.com/en/3.1/faq/install/
    # - https://docs.djangoproject.com/en/4.1/faq/install/
    py37-django111: Django>1.11.17
    py38-django22: Django>=2.2.8
    py39-django22: Django>=2.2.17
    py39-django30: Django>=3.0.11
    py39-django31: Django>=3.1.3
    py310-django32: Django>=3.2.9
    py311-django41: Django>=4.1.3
    static: flake8
    static: mypy
    test: -r{toxinidir}/requirements.txt
    test: pytest
    test: pytest-mock
    test: pytest-cov
commands =
    static: flake8 {posargs}
    static: mypy --config-file {toxinidir}/tox.ini {posargs}
    test: pytest --cov={toxinidir} {posargs}

[coverage:run]
omit =
    # Omit Python environments
    .tox/*
    */dist-packages/*
    */site-packages/*
    # Files that should not be included in coverage
    *__init__.py*
    */tests*
    # Coverage cannot parse settings.py
    envconfig/settings.py

[flake8]
jobs = 1
max-complexity = 10
exclude =
    # Exclude Python environments
    .tox,
    */dist-packages/*,
    */site-packages/*,
ignore =
    # Ignoring W503 means we prefer line breaks before operators
    # See https://www.python.org/dev/peps/pep-0008/#should-a-line-break-before-or-after-a-binary-operator
    W503

[mypy]
warn_unused_configs = true
ignore_missing_imports = true
files =
    **/*.py
